generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Caregiver {
  id          String    @id @default(cuid())
  first_name  String
  last_name   String
  phone_no    String?   @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User?     @relation(fields: [userId], references: [id])
  userId      String? @unique
  
  @@map("care_giver")
}


model User {
  id         String      @id @default(cuid())
  email      String
  avatar     String
  first_name String
  last_name  String
  phone_no   String?     @unique
  password   String
  otp        OTP[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  medicines  Medicine[]
  caregiver   Caregiver?
  
  @@map("users")
}



model OTP {
  id        String    @id @default(uuid())
  owner     User     @relation(fields: [userId], references: [id])
  userId    String
  code      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiresAt DateTime  @db.Timestamp(5)
  useCase   UseCase
  @@map("otp")
}

enum UseCase {
  LOGIN
  D2FA
  PHV
}

model Medicine {
  id             String                                                  @id @default(cuid())
  name           String
  type           String
  amount         Int
  pills_per_time Int
  duration       Int
  time           DateTime[]
  createdAt      DateTime                                                @default(now())
  updatedAt      DateTime                                                @updatedAt

  userId         String     
  owner          User?      @relation(fields: [userId], references: [id]) // Add the relation to User model
  @@map("medicine")
}

model Caregiver {
  id         String    @id @default(cuid())
  first_name String
  last_name  String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
